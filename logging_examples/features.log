Feature Engineering Start ... 

Feature Engineering Name: split_assessmentitem_id

testPaper       : 시험지 번호입니다.
dtype: object
[Examples]
INDEX 0000: 060001
INDEX 1000: 080012
INDEX 2000: 060041
INDEX 3000: 080041
INDEX 4000: 060091
INDEX 5000: 060101
INDEX 6000: 080100
INDEX 7000: 080112
INDEX 8000: 040049
INDEX 9000: 090011

testPaperCnt    : 시험지의 문항 번호입니다.
dtype: object
[Examples]
INDEX 0000: 001
INDEX 1000: 001
INDEX 2000: 007
INDEX 3000: 005
INDEX 4000: 003
INDEX 5000: 003
INDEX 6000: 004
INDEX 7000: 002
INDEX 8000: 003
INDEX 9000: 007

Feature Engineering Name: convert_time

timeSec         : 사용자가 문항을 푼 타임스태프 정보입니다.
dtype: int64
[Examples]
INDEX 0000: 1584976631
INDEX 1000: 1588175753
INDEX 2000: 1590428625
INDEX 3000: 1592332726
INDEX 4000: 1594832366
INDEX 5000: 1599493405
INDEX 6000: 1602576550
INDEX 7000: 1604429286
INDEX 8000: 1581193055
INDEX 9000: 1584613367

Feature Engineering Name: make_first_class

firstClass      : 대분류에 해당합니다.
dtype: object
[Examples]
INDEX 0000: 6
INDEX 1000: 8
INDEX 2000: 6
INDEX 3000: 8
INDEX 4000: 6
INDEX 5000: 6
INDEX 6000: 8
INDEX 7000: 8
INDEX 8000: 4
INDEX 9000: 9

Feature Engineering Name: make_second_class

secondClass     : 중분류에 해당합니다.
dtype: object
[Examples]
INDEX 0000: 7224
INDEX 1000: 4659
INDEX 2000: 602
INDEX 3000: 4795
INDEX 4000: 628
INDEX 5000: 706
INDEX 6000: 7171
INDEX 7000: 2711
INDEX 8000: 2071
INDEX 9000: 5261

Feature Engineering Name: make_correct_count

correctCnt      : 사용자가 맞춘 문항수를 나타냅니다.
dtype: int64
[Examples]
INDEX 0000: 470
INDEX 1000: 470
INDEX 2000: 470
INDEX 3000: 470
INDEX 4000: 470
INDEX 5000: 470
INDEX 6000: 470
INDEX 7000: 470
INDEX 8000: 796
INDEX 9000: 796

Feature Engineering Name: make_question_count

quesCnt         : 사용자가 푼 문항수를 나타냅니다.
dtype: int64
[Examples]
INDEX 0000: 745
INDEX 1000: 745
INDEX 2000: 745
INDEX 3000: 745
INDEX 4000: 745
INDEX 5000: 745
INDEX 6000: 745
INDEX 7000: 745
INDEX 8000: 933
INDEX 9000: 933

Feature Engineering Name: make_correct_percent

correctPer      : 사용자가 푼 전체 문항에 대한 정답률입니다.
dtype: float64
[Examples]
INDEX 0000: 0.6308724832214765
INDEX 1000: 0.6308724832214765
INDEX 2000: 0.6308724832214765
INDEX 3000: 0.6308724832214765
INDEX 4000: 0.6308724832214765
INDEX 5000: 0.6308724832214765
INDEX 6000: 0.6308724832214765
INDEX 7000: 0.6308724832214765
INDEX 8000: 0.8531618435155413
INDEX 9000: 0.8531618435155413

Feature Engineering Name: make_difficulty_by_firstclass

firstClassDifficulty : 유저의 대분류별 정답률을 나타냅니다.
dtype: float64
[Examples]
INDEX 0000: 0.791907514450867
INDEX 1000: 0.791907514450867
INDEX 2000: 0.791907514450867
INDEX 3000: 0.791907514450867
INDEX 4000: 0.46831955922865015
INDEX 5000: 0.46831955922865015
INDEX 6000: 0.46831955922865015
INDEX 7000: 0.46831955922865015
INDEX 8000: 0.8227194492254734
INDEX 9000: 0.8227194492254734
Feature Engineering End ... 
Original DataFrame Keywords: Index(['userID', 'assessmentItemID', 'testId', 'answerCode', 'Timestamp',
       'KnowledgeTag'],
      dtype='object')
Feature Added DataFrame Keywords: Index(['userID', 'assessmentItemID', 'testId', 'answerCode', 'Timestamp',
       'KnowledgeTag', 'testPaper', 'testPaperCnt', 'timeSec', 'firstClass',
       'secondClass', 'correctCnt', 'quesCnt', 'correctPer',
       'firstClassDifficulty'],
      dtype='object')
Feature Engineering Start ... 

Feature Engineering Name: split_assessmentitem_id

testPaper       : 시험지 번호입니다.
dtype: object
[Examples]
INDEX 0000: 050023
INDEX 1000: 020035
INDEX 2000: 050006
INDEX 3000: 020037
INDEX 4000: 050009
INDEX 5000: 050045
INDEX 6000: 050072
INDEX 7000: 050089
INDEX 8000: 050089
INDEX 9000: 050105

testPaperCnt    : 시험지의 문항 번호입니다.
dtype: object
[Examples]
INDEX 0000: 001
INDEX 1000: 003
INDEX 2000: 001
INDEX 3000: 003
INDEX 4000: 003
INDEX 5000: 001
INDEX 6000: 001
INDEX 7000: 003
INDEX 8000: 006
INDEX 9000: 004

Feature Engineering Name: convert_time

timeSec         : 사용자가 문항을 푼 타임스태프 정보입니다.
dtype: int64
[Examples]
INDEX 0000: 1578534991
INDEX 1000: 1582080021
INDEX 2000: 1583876850
INDEX 3000: 1586022801
INDEX 4000: 1588743149
INDEX 5000: 1591764737
INDEX 6000: 1594353821
INDEX 7000: 1595904396
INDEX 8000: 1597130998
INDEX 9000: 1599087082

Feature Engineering Name: make_first_class

firstClass      : 대분류에 해당합니다.
dtype: object
[Examples]
INDEX 0000: 5
INDEX 1000: 2
INDEX 2000: 5
INDEX 3000: 2
INDEX 4000: 5
INDEX 5000: 5
INDEX 6000: 5
INDEX 7000: 5
INDEX 8000: 5
INDEX 9000: 5

Feature Engineering Name: make_second_class

secondClass     : 중분류에 해당합니다.
dtype: object
[Examples]
INDEX 0000: 2626
INDEX 1000: 7693
INDEX 2000: 2617
INDEX 3000: 7924
INDEX 4000: 2618
INDEX 5000: 3729
INDEX 6000: 3827
INDEX 7000: 395
INDEX 8000: 394
INDEX 9000: 5269

Feature Engineering Name: make_correct_count

correctCnt      : 사용자가 맞춘 문항수를 나타냅니다.
dtype: int64
[Examples]
INDEX 0000: 716
INDEX 1000: 716
INDEX 2000: 716
INDEX 3000: 716
INDEX 4000: 716
INDEX 5000: 716
INDEX 6000: 716
INDEX 7000: 716
INDEX 8000: 716
INDEX 9000: 716

Feature Engineering Name: make_question_count

quesCnt         : 사용자가 푼 문항수를 나타냅니다.
dtype: int64
[Examples]
INDEX 0000: 1036
INDEX 1000: 1036
INDEX 2000: 1036
INDEX 3000: 1036
INDEX 4000: 1036
INDEX 5000: 1036
INDEX 6000: 1036
INDEX 7000: 1036
INDEX 8000: 1036
INDEX 9000: 1036

Feature Engineering Name: make_correct_percent

correctPer      : 사용자가 푼 전체 문항에 대한 정답률입니다.
dtype: float64
[Examples]
INDEX 0000: 0.6911196911196911
INDEX 1000: 0.6911196911196911
INDEX 2000: 0.6911196911196911
INDEX 3000: 0.6911196911196911
INDEX 4000: 0.6911196911196911
INDEX 5000: 0.6911196911196911
INDEX 6000: 0.6911196911196911
INDEX 7000: 0.6911196911196911
INDEX 8000: 0.6911196911196911
INDEX 9000: 0.6911196911196911

Feature Engineering Name: make_difficulty_by_firstclass

firstClassDifficulty : 유저의 대분류별 정답률을 나타냅니다.
dtype: float64
[Examples]
INDEX 0000: 0.6531322505800464
INDEX 1000: 0.6531322505800464
INDEX 2000: 0.6531322505800464
INDEX 3000: 0.6531322505800464
INDEX 4000: 0.6531322505800464
INDEX 5000: 0.6531322505800464
INDEX 6000: 0.6531322505800464
INDEX 7000: 0.6531322505800464
INDEX 8000: 0.6531322505800464
INDEX 9000: 0.8793103448275862
Feature Engineering End ... 
Original DataFrame Keywords: Index(['userID', 'assessmentItemID', 'testId', 'answerCode', 'Timestamp',
       'KnowledgeTag'],
      dtype='object')
Feature Added DataFrame Keywords: Index(['userID', 'assessmentItemID', 'testId', 'answerCode', 'Timestamp',
       'KnowledgeTag', 'testPaper', 'testPaperCnt', 'timeSec', 'firstClass',
       'secondClass', 'correctCnt', 'quesCnt', 'correctPer',
       'firstClassDifficulty'],
      dtype='object')
